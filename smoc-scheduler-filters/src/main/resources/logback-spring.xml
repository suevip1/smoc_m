<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="30 seconds">

    <appender name="INFO_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>return message.contains("info:");</expression>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!--被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。-->
        <file>${LOG_PATH}/smoc-scheduler-filters-info.log</file>
        <!--滚动策略  基于时间的分包策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- yyyy-MM-dd-HH 时间策略则为一小时一个文件 -->
            <FileNamePattern>${LOG_PATH}/smoc-scheduler-filters-info.%d{yyyy-MM-dd-HH}.%i.log</FileNamePattern>
            <!--日志文件保留小时数-->
            <MaxHistory>48</MaxHistory>
            <!--单个日志文件最大1GB-->
            <maxFileSize>1GB</maxFileSize>
            <!--日志文件总大小超过20GB会删除旧的日志文件-->
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>

        <!--级别过滤器，根据日志级别进行过滤。如果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--设置过滤级别-->
            <level>INFO</level>
            <!--用于配置符合过滤条件的操作-->
            <onMatch>ACCEPT</onMatch>
            <!--用于配置不符合过滤条件的操作-->
            <onMismatch>DENY</onMismatch>
        </filter>
        <!--  layout 负责把事件转换成字符串，格式化的日志信息的输出 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern> %msg%n
            </Pattern>
        </layout>
    </appender>

    <appender name="ERROR_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>${LOG_PATH}/smoc-scheduler-filters-error.log</File>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/smoc-scheduler-filters-error-%d{yyyyMMdd}.log.%i
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>2</maxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%msg%n
            </Pattern>
        </layout>
    </appender>

    <appender name="DEBUG_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>${LOG_PATH}/smoc-scheduler-filters-debug.log</File>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_PATH}/smoc-scheduler-filters-debug.%d{yyyy-MM-dd}.log
            </FileNamePattern>
        </rollingPolicy>
        <layout>
            <pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level]
                [%logger:%line]--%mdc{client} %msg%n</pattern>
        </layout>

    </appender>

    <appender name="WARN_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>
            ${LOG_PATH}/smoc-scheduler-filters-warn.log
        </File>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_PATH}/smoc-scheduler-filters-warn.%d{yyyy-MM-dd}.log
            </FileNamePattern>
        </rollingPolicy>
        <layout>
            <pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level]
                [%logger:%line]--%mdc{client} %msg%n</pattern>
        </layout>

    </appender>

    <!-- 控制台输出 -->
    <appender name="consoleAppender"
              class="ch.qos.logback.core.ConsoleAppender">
        <encoder
                class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
                %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 异步记录文件 -->
    <appender name="async_info_file"
              class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>200</queueSize>
        <appender-ref ref="INFO_FILE" />
    </appender>

    <!-- 异步记录文件 -->
    <appender name="async_warn_file"
              class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>100</queueSize>
        <appender-ref ref="WARN_FILE" />
    </appender>

    <!-- 异步记录文件 -->
    <appender name="async_error_file"
              class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>100</queueSize>
        <appender-ref ref="ERROR_FILE" />
    </appender>

    <!--关闭 nacos 心跳日志-->
    <logger name="com.alibaba.nacos.client.naming" level="OFF">

    </logger>

    <!--开发环境:打印控制台 -->
    <springProfile name="dev">
        <root level="info">
            <appender-ref ref="async_error_file" />
            <appender-ref ref="async_warn_file" />
            <appender-ref ref="async_info_file" />
        </root>
    </springProfile>

    <!--生产环境:输出到文件 -->
    <springProfile name="prod">
        <root level="info">
            <appender-ref ref="async_info_file" />
            <appender-ref ref="async_error_file" />
            <appender-ref ref="async_warn_file" />
        </root>
    </springProfile>
</configuration>